train <- data.frame(read.csv("../../Results/b2/b2_param-scan.csv",
header=TRUE))
plot.vars <- c('k', 'n', 'Coexistence')
train <- train[-22,]
num.pts <- dim(train)[1]
train$Coexistence <-
as.factor(sapply(
1:num.pts,
function (x)
freqs.to.class(train[x,freq_names])))
train <- data.frame(read.csv("../../Results/b2/b2_param-scan.csv",
header=TRUE))
plot.vars <- c('k', 'n', 'Coexistence')
train <- train[-22,]
train <- data.frame(read.csv("../../Results/b2/b2_param-scan.csv",header=TRUE))
setwd("~/Dropbox/Duke/evolutionary-games/Code/graphical")
train <- data.frame(read.csv("../../Results/b2/b2_param-scan.csv",header=TRUE))
plot.vars <- c('k', 'n', 'Coexistence')
train <- train[-22,]
num.pts <- dim(train)[1]
train$Coexistence <-
as.factor(sapply(
1:num.pts,
function (x)
freqs.to.class(train[x,freq_names])))
source('~/Dropbox/Duke/evolutionary-games/Code/graphical/phase_diag.r')
head(train)
source('~/Dropbox/Duke/evolutionary-games/Code/graphical/fp_freqs.R')
source('~/Dropbox/Duke/evolutionary-games/Code/graphical/fp_freqs.R')
fps
source('~/Dropbox/Duke/evolutionary-games/Code/graphical/fp_freqs.R')
